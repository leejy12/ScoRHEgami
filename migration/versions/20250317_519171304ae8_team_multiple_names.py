"""team multiple names

Revision ID: 519171304ae8
Revises: 0e5641fb7e7e
Create Date: 2025-03-17 14:16:57.441475

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql as pg_dialects


# revision identifiers, used by Alembic.
revision: str = "519171304ae8"
down_revision: Union[str, None] = "0e5641fb7e7e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("team_name_key", "team", type_="unique")

    op.add_column(
        "team", sa.Column("names", pg_dialects.ARRAY(sa.String()), nullable=True)
    )

    op.execute(
        """
        UPDATE
            team 
        SET
            names = ARRAY[name]
        WHERE
            name IS NOT NULL
        """
    )

    op.alter_column(
        "team", "names", existing_type=pg_dialects.ARRAY(sa.VARCHAR()), nullable=False
    )

    op.drop_column("team", "name")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("team", sa.Column("name", sa.String(), nullable=True))

    op.execute(
        """
        UPDATE
            team
        SET
            name = names[1]
        WHERE
            names IS NOT NULL AND array_length(names, 1) > 0
        """
    )

    op.drop_column("team", "names")

    op.create_unique_constraint("team_name_key", "team", ["name"])

    op.alter_column(
        "team", "name", existing_type=pg_dialects.ARRAY(sa.VARCHAR()), nullable=False
    )

    # ### end Alembic commands ###
